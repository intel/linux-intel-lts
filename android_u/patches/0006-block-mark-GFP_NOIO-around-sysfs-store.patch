From 42fcde83e7f3ca4224d6870beeda06b19f14f21d Mon Sep 17 00:00:00 2001
From: Ming Lei <tom.leiming@gmail.com>
Date: Mon, 13 Jan 2025 09:58:33 +0800
Subject: [PATCH 006/105] block: mark GFP_NOIO around sysfs ->store()
MIME-Version: 1.0
Content-Type: text/plain; charset=UTF-8
Content-Transfer-Encoding: 8bit

sysfs ->store is called with queue freezed, meantime we have several
->store() callbacks(update_nr_requests, wbt, scheduler) to allocate
memory with GFP_KERNEL which may run into direct reclaim code path,
then potential deadlock can be caused.

Fix the issue by marking NOIO around sysfs ->store()

Reported-by: Thomas Hellstr√∂m <thomas.hellstrom@linux.intel.com>
Cc: stable@vger.kernel.org
Signed-off-by: Ming Lei <ming.lei@redhat.com>
Reviewed-by: Christoph Hellwig <hch@lst.de>
Reviewed-by: John Garry <john.g.garry@oracle.com>
Link: https://lore.kernel.org/r/20250113015833.698458-1-ming.lei@redhat.com
Link: https://lore.kernel.org/linux-block/Z4RkemI9f6N5zoEF@fedora/T/#mc774c65eeca5c024d29695f9ac6152b87763f305
Signed-off-by: Jens Axboe <axboe@kernel.dk>
---
 block/blk-sysfs.c | 3 +++
 1 file changed, 3 insertions(+)

diff --git a/block/blk-sysfs.c b/block/blk-sysfs.c
index 4ea84e46a665..b979cda248a1 100644
--- a/block/blk-sysfs.c
+++ b/block/blk-sysfs.c
@@ -732,6 +732,7 @@ queue_attr_store(struct kobject *kobj, struct attribute *attr,
 {
 	struct queue_sysfs_entry *entry = to_queue(attr);
 	struct request_queue *q;
+	unsigned int noio_flag;
 	ssize_t res;
 
 	if (!entry->store)
@@ -739,7 +740,9 @@ queue_attr_store(struct kobject *kobj, struct attribute *attr,
 
 	q = container_of(kobj, struct request_queue, kobj);
 	mutex_lock(&q->sysfs_lock);
+	noio_flag = memalloc_noio_save();
 	res = entry->store(q, page, length);
+	memalloc_noio_restore(noio_flag);
 	mutex_unlock(&q->sysfs_lock);
 	return res;
 }
-- 
2.25.1

